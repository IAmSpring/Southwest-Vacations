{
  "info": {
    "_postman_id": "a84f2e3f-1239-48ef-ac11-57eb24c972c8",
    "name": "Southwest Vacations API",
    "description": "API collection for testing the Southwest Vacations application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["users", "register"]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.token) {",
                  "    pm.environment.set(\"authToken\", jsonData.token);",
                  "    console.log(\"Token saved to environment\");",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["users", "login"]
            },
            "description": "Login and get authentication token"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Get the current user's profile"
          },
          "response": []
        }
      ],
      "description": "User registration, login, and profile management"
    },
    {
      "name": "Trips",
      "item": [
        {
          "name": "Get All Trips",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/trips",
              "host": ["{{baseUrl}}"],
              "path": ["trips"]
            },
            "description": "Get a list of all available trips"
          },
          "response": []
        },
        {
          "name": "Get Trip Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/trips/trip1",
              "host": ["{{baseUrl}}"],
              "path": ["trips", "trip1"]
            },
            "description": "Get details of a specific trip"
          },
          "response": []
        },
        {
          "name": "Search Trips",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/trips/search?destination=Hawaii&minPrice=1000&maxPrice=2000",
              "host": ["{{baseUrl}}"],
              "path": ["trips", "search"],
              "query": [
                {
                  "key": "destination",
                  "value": "Hawaii"
                },
                {
                  "key": "minPrice",
                  "value": "1000"
                },
                {
                  "key": "maxPrice",
                  "value": "2000"
                }
              ]
            },
            "description": "Search for trips by destination and price range"
          },
          "response": []
        }
      ],
      "description": "Endpoints for accessing trip information"
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.bookingId) {",
                  "    pm.environment.set(\"bookingId\", jsonData.bookingId);",
                  "    console.log(\"Booking ID saved: \" + jsonData.bookingId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tripId\": \"trip1\",\n    \"fullName\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"travelers\": 2,\n    \"startDate\": \"2025-08-01\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["bookings"]
            },
            "description": "Create a new booking"
          },
          "response": []
        },
        {
          "name": "Get User Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings/user",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "user"]
            },
            "description": "Get all bookings for the current user"
          },
          "response": []
        },
        {
          "name": "Get Booking Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}"]
            },
            "description": "Get details of a specific booking"
          },
          "response": []
        },
        {
          "name": "Cancel Booking",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/bookings/{{bookingId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["bookings", "{{bookingId}}", "cancel"]
            },
            "description": "Cancel an existing booking"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing bookings"
    },
    {
      "name": "Favorites",
      "item": [
        {
          "name": "Add to Favorites",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.id) {",
                  "    pm.environment.set(\"favoriteId\", jsonData.id);",
                  "    console.log(\"Favorite ID saved: \" + jsonData.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"tripId\": \"trip2\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/favorites",
              "host": ["{{baseUrl}}"],
              "path": ["favorites"]
            },
            "description": "Add a trip to favorites"
          },
          "response": []
        },
        {
          "name": "Get Favorites",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/favorites",
              "host": ["{{baseUrl}}"],
              "path": ["favorites"]
            },
            "description": "Get all favorites for the current user"
          },
          "response": []
        },
        {
          "name": "Remove from Favorites",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/favorites/{{favoriteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["favorites", "{{favoriteId}}"]
            },
            "description": "Remove a trip from favorites"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing favorite trips"
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Check if the API is running"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000",
      "type": "string"
    }
  ]
} 