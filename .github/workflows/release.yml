name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate release notes
        id: release-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # Generate changelog since last tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag exists, use all commits
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" | head -50)
          else
            CHANGELOG=$(git log --pretty=format:"* %s (%h)" $PREV_TAG..HEAD)
          fi
          
          # Save changelog to file
          echo "# Release $VERSION" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## What's Changed" >> CHANGELOG.md
          echo "$CHANGELOG" >> CHANGELOG.md
          
          # Make changelog available for release body
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

      - name: Build project
        run: npm run build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ## Release ${{ env.VERSION }}
            
            ### What's Changed
            ${{ steps.release-notes.outputs.changelog }}
            
            ### Installation
            
            ```
            npm install southwest-vacations@${{ env.VERSION }}
            ```
            
            ### See the live demo
            [GitHub Pages Demo](https://iamspring.github.io/Southwest-Vacations/)
          draft: false
          prerelease: false

      - name: Archive build
        run: |
          cd dist
          zip -r ../southwest-vacations-${{ env.VERSION }}.zip .

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./southwest-vacations-${{ env.VERSION }}.zip
          asset_name: southwest-vacations-${{ env.VERSION }}.zip
          asset_content_type: application/zip 